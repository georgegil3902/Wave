
from PyQt6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,QMetaObject, QObject, QPoint, QRect,QSize, QTime, QUrl, Qt)
from PyQt6.QtGui import (QAction, QBrush, QColor, QConicalGradient,QCursor, QFont, QFontDatabase, QGradient,QIcon, QImage, QKeySequence, QLinearGradient,QPainter, QPalette, QPixmap, QRadialGradient,QTransform)
from PyQt6.QtWidgets import (QApplication, QLabel, QMainWindow, QMenu,QMenuBar, QSizePolicy, QSlider, QStatusBar,QTabWidget, QToolButton, QWidget)


class Ui_MainWindow(object):
    def setupUi(self, MainWindow, controller):
        if not MainWindow.objectName():
            MainWindow.setObjectName("MainWindow")
        MainWindow.resize(600, 150)
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(MainWindow.sizePolicy().hasHeightForWidth())
        MainWindow.setSizePolicy(sizePolicy)

        MainWindow.setAutoFillBackground(False)
        MainWindow.setTabShape(QTabWidget.TabShape.Rounded)
        
        self.actionOpen = QAction(MainWindow)
        self.actionOpen.setObjectName("actionOpen")
        self.actionPlayPause = QAction(MainWindow)
        self.actionPlayPause.setObjectName("actionPlayPause")
        self.actionNext = QAction(MainWindow)
        self.actionNext.setObjectName("actionNext")
        self.actionPrevious = QAction(MainWindow)
        self.actionPrevious.setObjectName("actionPrevious")
        self.actionStop = QAction(MainWindow)
        self.actionStop.setObjectName("actionStop")

        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.rewindtoolButton = QToolButton(self.centralwidget)
        self.rewindtoolButton.setObjectName("rewindtoolButton")
        self.rewindtoolButton.setGeometry(QRect(230, 60, 40, 40))
        icon1 = QIcon()
        icon1.addFile("interface/icons/rewind.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.rewindtoolButton.setIcon(icon1)
        
        self.playpausetoolButton = QToolButton(self.centralwidget)
        self.playpausetoolButton.setObjectName("playpausetoolButton")
        self.playpausetoolButton.setGeometry(QRect(280, 60, 40, 40))
        icon2 = QIcon()
        icon2.addFile("interface/icons/play.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.playpausetoolButton.setIcon(icon2)
        
        self.forwardtoolButton = QToolButton(self.centralwidget)
        self.forwardtoolButton.setObjectName("forwardtoolButton")
        self.forwardtoolButton.setGeometry(QRect(330, 60, 40, 40))
        icon3 = QIcon()
        icon3.addFile("interface/icons/forward.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.forwardtoolButton.setIcon(icon3)
        
        self.volumetoolButton = QToolButton(self.centralwidget)
        self.volumetoolButton.setObjectName("volumetoolButton")
        self.volumetoolButton.setGeometry(QRect(440, 60, 40, 40))
        icon4 = QIcon()
        icon4.addFile("interface/icons/mute.png", QSize(), QIcon.Mode.Normal, QIcon.State.Off)
        self.volumetoolButton.setIcon(icon4)
        
        self.scrubber = QSlider(self.centralwidget)
        self.scrubber.setObjectName("scrubber")
        self.scrubber.setGeometry(QRect(70, 10, 460, 40))
        self.scrubber.setOrientation(Qt.Orientation.Horizontal)
        
        self.progressLabel = QLabel(self.centralwidget)
        self.progressLabel.setObjectName("progressLabel")
        self.progressLabel.setGeometry(QRect(10, 10, 60, 40))
        
        self.timeLabel = QLabel(self.centralwidget)
        self.timeLabel.setObjectName("timeLabel")
        self.timeLabel.setGeometry(QRect(540, 10, 60, 40))
        
        self.volumeSlider = QSlider(self.centralwidget)
        self.volumeSlider.setObjectName("volumeSlider")
        self.volumeSlider.setGeometry(QRect(490, 60, 100, 40))
        self.volumeSlider.setMaximum(100)
        self.volumeSlider.setOrientation(Qt.Orientation.Horizontal)
        
        self.songLabel = QLabel(self.centralwidget)
        self.songLabel.setObjectName("songLabel")
        self.songLabel.setGeometry(QRect(10, 60, 200, 40))
        
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName("menubar")
        self.menubar.setGeometry(QRect(0, 0, 600, 21))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuOptions = QMenu(self.menubar)
        self.menuOptions.setObjectName("menuOptions")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuOptions.menuAction())
        self.menuFile.addAction(self.actionOpen)
        self.menuOptions.addAction(self.actionPlayPause)
        self.menuOptions.addAction(self.actionStop)
        self.menuOptions.addAction(self.actionNext)
        self.menuOptions.addAction(self.actionPrevious)

        self.retranslateUi(MainWindow)

        QMetaObject.connectSlotsByName(MainWindow)
        
        # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", "Wave - Your Favorite Audio Player", None))
        self.actionOpen.setText(QCoreApplication.translate("MainWindow", "Open", None))
        #if QT_CONFIG(tooltip)
        self.actionOpen.setToolTip(QCoreApplication.translate("MainWindow", "Open", None))
        #endif // QT_CONFIG(tooltip)
        #if QT_CONFIG(statustip)
        self.actionOpen.setStatusTip(QCoreApplication.translate("MainWindow", "Open new File", None))
        #endif // QT_CONFIG(statustip)
        #if QT_CONFIG(shortcut)
        self.actionOpen.setShortcut(QCoreApplication.translate("MainWindow", "Ctrl+O", None))
        #endif // QT_CONFIG(shortcut)
        self.actionPlayPause.setText(QCoreApplication.translate("MainWindow", "Play/Pause", None))
        #if QT_CONFIG(shortcut)
        self.actionPlayPause.setShortcut(QCoreApplication.translate("MainWindow", "Space", None))
        #endif // QT_CONFIG(shortcut)
        self.actionNext.setText(QCoreApplication.translate("MainWindow", "Next", None))
        #if QT_CONFIG(shortcut)
        self.actionNext.setShortcut(QCoreApplication.translate("MainWindow", "Ctrl+N", None))
        #endif // QT_CONFIG(shortcut)
        self.actionPrevious.setText(QCoreApplication.translate("MainWindow", "Previous", None))
        #if QT_CONFIG(shortcut)
        self.actionPrevious.setShortcut(QCoreApplication.translate("MainWindow", "Ctrl+B", None))
        #endif // QT_CONFIG(shortcut)
        self.actionStop.setText(QCoreApplication.translate("MainWindow",  "Stop", None))
        #if QT_CONFIG(shortcut)
        self.actionStop.setShortcut(QCoreApplication.translate("MainWindow", "Ctrl+E", None))
        #endif // QT_CONFIG(shortcut)
        self.rewindtoolButton.setText(QCoreApplication.translate("MainWindow", "...", None))
        self.playpausetoolButton.setText(QCoreApplication.translate("MainWindow", "...", None))
        self.forwardtoolButton.setText(QCoreApplication.translate("MainWindow", "...", None))
        self.volumetoolButton.setText(QCoreApplication.translate("MainWindow", "...", None))
        self.progressLabel.setText(QCoreApplication.translate("MainWindow", "00:00:00", None))
        self.timeLabel.setText(QCoreApplication.translate("MainWindow", "00:00:00", None))
        self.songLabel.setText(QCoreApplication.translate("MainWindow", "Song Name", None))
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", "File", None))
        self.menuOptions.setTitle(QCoreApplication.translate("MainWindow", "Options", None))
        # retranslateUi

def start(controller=None):
    app = QApplication([])
    mainWindow = QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(mainWindow, controller)
    mainWindow.show()
    app.exec()

if __name__=="__main__":
    start()